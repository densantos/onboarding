name: Onboard

on:
  push:
    branches:
      - main  # or any branch you want the workflow to run on

jobs:
  authenticate:
    name: Create database credentials
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install yq (YAML Processor)
        run: sudo snap install yq  

      - name: Create environment variables
        id: read_variables
        run: |
          echo "REGION=$(yq e .region onboarding.yaml)" >> $GITHUB_ENV
          echo "ENVIRONMENT=$(yq e .environment onboarding.yaml)" >> $GITHUB_ENV
          echo "CUSTOMER=$(yq e .customer onboarding.yaml)" >> $GITHUB_ENV
          echo "ACCOUNT=$(yq e .account onboarding.yaml)" >> $GITHUB_ENV

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.REGION }}
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT }}:role/GitHubCICDOnboardingRole
          role-session-name: GitHubActions
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Generate Password
        id: generate_password
        run: |
          echo "PASSWORD=$(python generate_password.py)" >> $GITHUB_ENV

      - name: Create secret
        run: |
          aws secretsmanager create-secret --name "secret-${{ env.CUSTOMER }}" --secret-string "{\"${{ env.ENVIRONMENT }}-db_user\":\"postgres\",\"${{ env.ENVIRONMENT }}-pwd\":\"${{ env.PASSWORD }}\"}"